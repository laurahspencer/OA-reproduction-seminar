filter(Phylum=="Echinodermata") %>%
mutate(Taxa = fct_relevel(Taxa, c("Sea star", "Sea urchin", "Sand dollar")))
ggplotly(ggplot() +
geom_jitter(data=Echino.ph, aes(x=pH.experim, y=Perc.Fertilization, group=Taxa, col=Taxa, text=`Common name`), size=1.2, width=0.03) +
#facet_wrap(~Phylum, scales="free") + theme_minimal() +
#geom_smooth(method="lm", se=F, aes(col=Taxa), formula=y ~ poly(x, 2, raw=TRUE)) +
ggtitle("Mollusca") +
xlab("Experimental pH") + ylab("Fertilization %") +
scale_color_manual(values=c("#e41a1c","#ff7f00","#4daf4a",'#377eb8',"#984ea3")) +
#scale_color_discrete(name="Taxa",
#breaks=c("abalone","mussel","scallop","oyster","clam")) +
theme_minimal() +
geom_line(data = predict.echino.df, aes(x=ph, y=fit, col=taxa)) +
geom_ribbon(data = predict.echino.df, aes(x=ph, ymin=lwr, ymax=upr, fill=taxa), linetype=2, alpha=0.1))
summary(model6 <- lm(fert~ph+I(ph^2)+I(ph^3)+ taxa)) # test adding 3rd order <----------final model
summary(model7 <- lm(fert~(ph+I(ph^2)+I(ph^3))*taxa)) # test varying slopes by taxa
summary(model6 <- lm(fert~ph+I(ph^2)+I(ph^3)+ taxa)) # test adding 3rd order <----------final model
anova(model6, model7) # adding 3rd order improves model
summary(model1 <- lm(fert~ph))
summary(model2 <- lm(fert~ph+I(ph^2)))
anova(model1, model2) #2nd order polynomial better fit than straight line
summary(model3 <- lm(fert~ph+taxa)) # test different intercepts by taxa, common slope
anova(model1, model3) #different intercept by taxa improves model
summary(model4 <- lm(fert~ph*taxa))# test diff slopes AND intercepts by taxa
anova(model3, model4) # slopes not important
summary(model5 <- lm(fert~ph+taxa+I(ph^2))) #test 2nd order polynomial with taxa intercepts
anova(model3, model5) # adding 2nd order improves ph+taxa model.
anova(model2, model5) # adding taxa improves ph+2nd order model.
summary(model6 <- lm(fert~ph+I(ph^2)+I(ph^3)+ taxa)) # test adding 3rd order <----------final model
anova(model5, model6) # adding 3rd order improves model
summary(model7 <- lm(fert~(ph+I(ph^2)+I(ph^3))*taxa)) # test varying slopes by taxa
anova(model6, model7) # adding 3rd order improves model. Does not improve model
AIC(model1, model2, model3, model4, model5, model6, model7)
hist(model6$residuals) #residuals kind of normal ?
plot(model6) #doesn't look totally okay. should follow up.
plot(model7)
lm.echino <- lm(fert~ph+I(ph^2)+I(ph^3)+ taxa)
predict.echino <- predict(lm.echino, interval = 'confidence', newdata = subset(new.data, phylum=="Echinodermata")[,1:2])
predict.echino.df <- predict.echino %>%
as.data.frame() %>%
cbind(subset(new.data, phylum=="Echinodermata"))
predict.echino.df$taxa  <- factor(droplevels(predict.echino.df$taxa), levels=c("Sea star", "Sea urchin", "Sand dollar"))
Echino.ph <- fert.data.3 %>%
filter(Phylum=="Echinodermata") %>%
mutate(Taxa = fct_relevel(Taxa, c("Sea star", "Sea urchin", "Sand dollar")))
ggplotly(ggplot() +
geom_jitter(data=Echino.ph, aes(x=pH.experim, y=Perc.Fertilization, group=Taxa, col=Taxa, text=`Common name`), size=1.2, width=0.03) +
#facet_wrap(~Phylum, scales="free") + theme_minimal() +
#geom_smooth(method="lm", se=F, aes(col=Taxa), formula=y ~ poly(x, 2, raw=TRUE)) +
ggtitle("Mollusca") +
xlab("Experimental pH") + ylab("Fertilization %") +
scale_color_manual(values=c("#e41a1c","#ff7f00","#4daf4a",'#377eb8',"#984ea3")) +
#scale_color_discrete(name="Taxa",
#breaks=c("abalone","mussel","scallop","oyster","clam")) +
theme_minimal() +
geom_line(data = predict.echino.df, aes(x=ph, y=fit, col=taxa)) +
geom_ribbon(data = predict.echino.df, aes(x=ph, ymin=lwr, ymax=upr, fill=taxa), linetype=2, alpha=0.1))
ggplotly(ggplot() +
geom_jitter(data=Echino.ph, aes(x=pH.experim, y=Perc.Fertilization, group=Taxa, col=Taxa, text=`Common name`), size=1.2, width=0.03) +
#facet_wrap(~Phylum, scales="free") + theme_minimal() +
#geom_smooth(method="lm", se=F, aes(col=Taxa), formula=y ~ poly(x, 2, raw=TRUE)) +
ggtitle("Mollusca") +
xlab("Experimental pH") + ylab("Fertilization %") +
scale_color_manual(values=c("#e41a1c","#ff7f00","#4daf4a")) +
#scale_color_discrete(name="Taxa",
#breaks=c("abalone","mussel","scallop","oyster","clam")) +
theme_minimal() +
geom_line(data = predict.echino.df, aes(x=ph, y=fit, col=taxa)) +
geom_ribbon(data = predict.echino.df, aes(x=ph, ymin=lwr, ymax=upr, fill=taxa), linetype=2, alpha=0.1))
ggplotly(ggplot() +
geom_jitter(data=Echino.ph, aes(x=pH.experim, y=Perc.Fertilization, group=Taxa, col=Taxa, text=`Common name`), size=1.2, width=0.03) +
#facet_wrap(~Phylum, scales="free") + theme_minimal() +
#geom_smooth(method="lm", se=F, aes(col=Taxa), formula=y ~ poly(x, 2, raw=TRUE)) +
ggtitle("Mollusca") +
xlab("Experimental pH") + ylab("Fertilization %") +
scale_color_manual(values=c("#e41a1c","#ff7f00","#4daf4a")) +
#scale_color_discrete(name="Taxa",
#breaks=c("abalone","mussel","scallop","oyster","clam")) +
theme_minimal() +
geom_line(data = predict.echino.df, aes(x=ph, y=fit, col=taxa)) +
geom_ribbon(data = predict.echino.df, aes(x=ph, ymin=lwr, ymax=upr, fill=taxa), linetype=2, alpha=0.1) +
scale_fill_manual(values=c("#e41a1c","#ff7f00","#4daf4a")))
ggplotly(ggplot() +
geom_jitter(data=Echino.ph, aes(x=pH.experim, y=Perc.Fertilization, group=Taxa, col=Taxa, text=`Common name`), size=1.2, width=0.03) +
#facet_wrap(~Phylum, scales="free") + theme_minimal() +
#geom_smooth(method="lm", se=F, aes(col=Taxa), formula=y ~ poly(x, 2, raw=TRUE)) +
ggtitle("Echinodermata") +
xlab("Experimental pH") + ylab("Fertilization %") +
scale_color_manual(values=c("#e41a1c","#ff7f00","#4daf4a")) +
theme_minimal() +
geom_line(data = predict.echino.df, aes(x=ph, y=fit, col=taxa)) +
geom_ribbon(data = predict.echino.df, aes(x=ph, ymin=lwr, ymax=upr, fill=taxa), linetype=2, alpha=0.1) +
scale_fill_manual(values=c("#e41a1c","#ff7f00","#4daf4a")))
summary(model9 <- lm(fert~ph+sperm+I(sperm^2), na.action = na.exclude)) #<--- lowest AIC
fert<-subset(fert.data.3, Phylum=="Cnidaria")$Perc.Fertilization
ph<-subset(fert.data.3, Phylum=="Cnidaria")$pH.experim
sperm <- subset(fert.data.3, Phylum=="Cnidaria")$Sperm.per.mL
ph.group <- as.factor(subset(fert.data.3, Phylum=="Cnidaria")$pH.group)
genera <- as.factor(subset(fert.data.3, Phylum=="Cnidaria")$Family)
species <- as.factor(subset(fert.data.3, Phylum=="Cnidaria")$Species)
x <- c(7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8, 8.1, 8.2, 8.3)
summary(model0 <- lm(fert~ph, na.action = na.exclude)) #pH not sign. alone
summary(model1 <- lm(fert~ph.group, na.action = na.exclude)) # ph.group not sign. alone
summary(model2 <- lm(fert~sperm, na.action = na.exclude)) # sperm concentration sign. factor
summary(model3 <- lm(fert~sperm+ph, na.action = na.exclude)) # pH.group not sign. after controlling for sperm conc. intercept
summary(model4 <- lm(fert~sperm+ph.group, na.action = na.exclude)) # pH.group not sign. after controlling for sperm conc. intercept
summary(model5 <- lm(fert~sperm*ph, na.action = na.exclude)) # pH not sign. after controlling for sperm conc. intercept
summary(model6 <- lm(fert~sperm*ph.group, na.action = na.exclude)) # ph.group not sign. after controlling for sperm
summary(model3 <- lm(fert~sperm+ph, na.action = na.exclude))
summary(model7 <- lm(fert~sperm+ph+I(ph^2), na.action = na.exclude))
summary(model8 <- lm(fert~sperm+ph+I(ph^2)+I(ph^3), na.action = na.exclude))
summary(model9 <- lm(fert~ph+sperm+I(sperm^2), na.action = na.exclude)) #<--- lowest AIC
summary(model10 <- lm(fert~ph+sperm+I(sperm^2)+I(sperm^3), na.action = na.exclude))
summary(model11 <- lm(fert~ph.group+sperm+I(sperm^2), na.action = na.exclude))
AIC(model0, model1, model2, model3, model4, model5, model6, model7, model8, model9, model10, model11)
anova(model3, model9) #model 9 improves model 3 by adding a 2nd order polynomial sperm variable
hist(model9$residuals) #kinda normal
plot(model9) #somewhat concerning ... check back later
summary(model12 <- lm(fert ~ species*ph, na.action = na.exclude))
summary(model13 <- lm(fert ~ species+ph, na.action = na.exclude))
summary(model14 <- lm(fert ~ genera*ph, na.action = na.exclude))
summary(model15 <- lm(fert ~ genera+ph))
summary(model15 <- lm(fert ~ genera+ph))
anova(model16 <- lm(fert ~ species+ph+sperm, na.action = na.exclude))
summary(model17 <- lm(fert ~ genera+ph+sperm, na.action = na.exclude))
anova(model13, model6)
AIC(model0, model1, model2, model3, model4, model5, model6, model7, model8, model9, model10, model11, model12, model13, model14, model15, model16, model17)
hist(model13$residuals) #kinda normal
plot(model13) #somewhat concerning ... check back later
predict.cnid <- predict(model16, interval = 'confidence')
predict.cnid.df <- cbind(as.data.frame(predict.cnid),
subset(fert.data.3, Phylum=="Cnidaria")$pH.experim,
subset(fert.data.3, Phylum=="Cnidaria")$Sperm.per.mL,
subset(fert.data.3, Phylum=="Cnidaria")$Family,
subset(fert.data.3, Phylum=="Cnidaria")$Species) %>%
purrr::set_names(c("fit", "lwr", "upr", "ph", "sperm", "genera", "species"))
fert.data.3 %>%
filter(Phylum=="Cnidaria") %>%
ggplot(mapping=aes(x=pH.experim, y=Perc.Fertilization, group=Species, text=`Common name`)) +
geom_jitter(size=1.2, width=0.03) +
#facet_wrap(~Phylum, scales="free") + theme_minimal() +
#geom_smooth(method="lm", se=F, aes(col=Taxa), formula=y ~ poly(x, 2, raw=TRUE)) +
geom_line(aes(pH.experim, predict.cnid.df$fit, col=predict.cnid.df$species)) +
ggtitle("Cnidaria") +
xlab("Experimental pH") + ylab("Fertilization %") +
theme_minimal()
fert.data.3 %>%
filter(Phylum=="Cnidaria") %>%
ggplot(mapping=aes(x=pH.experim, y=Perc.Fertilization, group=Taxa, text=`Common name`)) +
geom_jitter(size=1.2, width=0.03) +
#facet_wrap(~Phylum, scales="free") + theme_minimal() +
geom_smooth(method="lm", se=F, col="#4daf4a", size=0.6) +
#geom_line(aes(pH.experim, predict.cnid.df$fit)) +
ggtitle("Cnidaria") +
xlab("Experimental pH") + ylab("Fertilization %") +
theme_minimal()
fert.data.3 %>%
filter(Phylum=="Cnidaria") %>%
ggplot(mapping=aes(x=pH.experim, y=Perc.Fertilization, group=Species, text=`Common name`)) +
geom_jitter(size=1.2, width=0.03) +
#facet_wrap(~Phylum, scales="free") + theme_minimal() +
#geom_smooth(method="lm", se=F, aes(col=Taxa), formula=y ~ poly(x, 2, raw=TRUE)) +
geom_line(aes(pH.experim, predict.cnid.df$fit, col=predict.cnid.df$species)) +
ggtitle("Cnidaria") +
xlab("Experimental pH") + ylab("Fertilization %") +
theme_minimal()
fert.data.3 %>%
filter(Phylum=="Cnidaria") %>%
ggplot(mapping=aes(x=pH.experim, y=Perc.Fertilization, group=Taxa, text=`Common name`)) +
geom_jitter(size=1.2, width=0.03) +
#facet_wrap(~Phylum, scales="free") + theme_minimal() +
geom_smooth(method="lm", se=F, col="#4daf4a", size=0.6) +
#geom_line(aes(pH.experim, predict.cnid.df$fit)) +
ggtitle("Cnidaria") +
xlab("Experimental pH") + ylab("Fertilization %") +
theme_minimal()
fert.data.3 %>%
filter(Phylum=="Cnidaria") %>%
ggplot(mapping=aes(x=pH.experim, y=Perc.Fertilization, group=Species, text=`Common name`)) +
geom_jitter(size=1.2, width=0.03) +
#facet_wrap(~Phylum, scales="free") + theme_minimal() +
#geom_smooth(method="lm", se=F, aes(col=Taxa), formula=y ~ poly(x, 2, raw=TRUE)) +
geom_line(aes(pH.experim, predict.cnid.df$fit, col=predict.cnid.df$species)) +
ggtitle("Cnidaria") +
xlab("Experimental pH") + ylab("Fertilization %") +
theme_minimal()
Cnid.ph.min.max <- fert.data.3 %>%
select(Phylum, Taxa, pH.experim, Species, Sperm.per.mL) %>%
group_by(Phylum, Taxa, Species) %>%
summarize(min=min(pH.experim, na.rm=TRUE), max=max(pH.experim, na.rm=TRUE))
Cnid.ph.min.max
Cnid.ph.min.max <- fert.data.3 %>%
select(Phylum, Taxa, pH.experim, Species, Sperm.per.mL) %>%
group_by(Phylum, Taxa, Species, Sperm.per.mL) %>%
summarize(min=min(pH.experim, na.rm=TRUE), max=max(pH.experim, na.rm=TRUE))
Cnid.ph.min.max
taxa.list.cnid <- list()
for (i in 1:nrow(Cnid.ph.min.max)) {
taxa.list[[i]] <- data.frame(ph=c(seq(from=as.numeric(Cnid.ph.min.max[i,"min"]),
to=as.numeric(Cnid.ph.min.max[i,"max"]),
by=0.01)),
taxa=rep(c(ph.min.max[i,"Taxa"])),
phylum=rep(c(ph.min.max[i,"Phylum"])))
}
new.data <- bind_rows(taxa.list) %>% purrr::set_names(c("ph", "taxa", "phylum"))
new.data
Cnid.ph.min.max <- fert.data.3 %>%
filter(Phylum=="Cnidaria") %>%
select(Phylum, Taxa, pH.experim, Species, Sperm.per.mL) %>%
group_by(Phylum, Taxa, Species, Sperm.per.mL) %>%
summarize(min=min(pH.experim, na.rm=TRUE), max=max(pH.experim, na.rm=TRUE))
Cnid.ph.min.max
taxa.list.cnid <- list()
new.data.cnid <- bind_rows(taxa.list) %>% purrr::set_names(c("ph", "taxa", "phylum"))
new.data.cnid
taxa.list.cnid <- list()
for (i in 1:nrow(Cnid.ph.min.max)) {
taxa.list[[i]] <- data.frame(ph=c(seq(from=as.numeric(Cnid.ph.min.max[i,"min"]),
to=as.numeric(Cnid.ph.min.max[i,"max"]),
by=0.01)),
taxa=rep(c(ph.min.max[i,"Taxa"])),
species=rep(c(ph.min.max[i,"Species"])),
phylum=rep(c(ph.min.max[i,"Phylum"])))
}
Cnid.ph.min.max <- fert.data.3 %>%
filter(Phylum=="Cnidaria") %>%
select(Phylum, Taxa, pH.experim, Species, Sperm.per.mL) %>%
group_by(Phylum, Taxa, Species, Sperm.per.mL) %>%
summarize(min=min(pH.experim, na.rm=TRUE), max=max(pH.experim, na.rm=TRUE))
Cnid.ph.min.max
taxa.list.cnid <- list()
for (i in 1:nrow(Cnid.ph.min.max)) {
taxa.list[[i]] <- data.frame(ph=c(seq(from=as.numeric(Cnid.ph.min.max[i,"min"]),
to=as.numeric(Cnid.ph.min.max[i,"max"]),
by=0.01)),
taxa=rep(c(ph.min.max[i,"Taxa"])),
species=rep(c(ph.min.max[i,"Species"])),
phylum=rep(c(ph.min.max[i,"Phylum"])))
}
Cnid.ph.min.max
ph.min.max[i,"Species"]
Cnid.ph.min.max <- fert.data.3 %>%
filter(Phylum=="Cnidaria") %>%
select(Phylum, Taxa, pH.experim, Species, Sperm.per.mL) %>%
group_by(Phylum, Taxa, Species, Sperm.per.mL) %>%
summarize(min=min(pH.experim, na.rm=TRUE), max=max(pH.experim, na.rm=TRUE))
taxa.list.cnid <- list()
\for (i in 1:nrow(Cnid.ph.min.max)) {
for (i in 1:nrow(Cnid.ph.min.max)) {
taxa.list[[i]] <- data.frame(ph=c(seq(from=as.numeric(Cnid.ph.min.max[i,"min"]),
to=as.numeric(Cnid.ph.min.max[i,"max"]),
by=0.01)),
taxa=rep(c(Cnid.ph.min.max[i,"Taxa"])),
species=rep(c(Cnid.ph.min.max[i,"Species"])),
phylum=rep(c(Cnid.ph.min.max[i,"Phylum"])))
}
taxa.list
Cnid.ph.min.max
Cnid.ph.min.max <- fert.data.3 %>%
filter(Phylum=="Cnidaria") %>%
select(Phylum, Taxa, pH.experim, Species) %>%
group_by(Phylum, Taxa, Species, Sperm.per.mL) %>%
summarize(min=min(pH.experim, na.rm=TRUE), max=max(pH.experim, na.rm=TRUE))
Cnid.ph.min.max <- fert.data.3 %>%
filter(Phylum=="Cnidaria") %>%
select(Phylum, Taxa, pH.experim, Species) %>%
group_by(Phylum, Taxa, Species) %>%
summarize(min=min(pH.experim, na.rm=TRUE), max=max(pH.experim, na.rm=TRUE))
taxa.list.cnid <- list()
for (i in 1:nrow(Cnid.ph.min.max)) {
taxa.list[[i]] <- data.frame(ph=c(seq(from=as.numeric(Cnid.ph.min.max[i,"min"]),
to=as.numeric(Cnid.ph.min.max[i,"max"]),
by=0.01)),
taxa=rep(c(Cnid.ph.min.max[i,"Taxa"])),
species=rep(c(Cnid.ph.min.max[i,"Species"])),
phylum=rep(c(Cnid.ph.min.max[i,"Phylum"])))
}
taxa.list[[i]]
taxa.list.cnid <- list()
for (i in 1:nrow(Cnid.ph.min.max)) {
taxa.list[[i]] <- data.frame(ph=c(seq(from=as.numeric(Cnid.ph.min.max[i,"min"]),
to=as.numeric(Cnid.ph.min.max[i,"max"]),
by=0.01)),
taxa=rep(c(Cnid.ph.min.max[i,"Taxa"])),
species=rep(c(Cnid.ph.min.max[i,"Species"])),
phylum=rep(c(Cnid.ph.min.max[i,"Phylum"])))
}
new.data.cnid <- bind_rows(taxa.list) %>% purrr::set_names(c("ph", "taxa", "species", "phylum"))
predict.cnid <- predict(model13, interval = 'confidence', newdata = new.data.cnid[,1:2])
new.data.cnid[,1:2]
new.data.cnid
new.data.cnid[,1,3]
predict.cnid <- predict(model13, interval = 'confidence', newdata = new.data.cnid[,c(1,3)])
predict.cnid.df <- predict.cnid %>%
as.data.frame() %>%
cbind(new.data.cnid)
Cnid.ph <- fert.data.3 %>%
filter(Phylum=="Cnidaria") #%>%
Cnid.ph <- fert.data.3 %>%
filter(Phylum=="Cnidaria") #%>%
ggplotly(ggplot() +
geom_jitter(data=Cnid.ph, aes(x=pH.experim, y=Perc.Fertilization, group=Taxa, col=Taxa, text=`Common name`), size=1.2, width=0.03) +
#facet_wrap(~Phylum, scales="free") + theme_minimal() +
#geom_smooth(method="lm", se=F, aes(col=Taxa), formula=y ~ poly(x, 2, raw=TRUE)) +
ggtitle("Echinodermata") +
xlab("Experimental pH") + ylab("Fertilization %") +
scale_color_manual(values=c("#e41a1c","#ff7f00","#4daf4a")) +
theme_minimal() +
geom_line(data = predict.cnid.df, aes(x=ph, y=fit, col=species)) +
geom_ribbon(data = predict.cnid.df, aes(x=ph, ymin=lwr, ymax=upr, fill=species), linetype=2, alpha=0.1) +
scale_fill_manual(values=c("#e41a1c","#ff7f00","#4daf4a")))
ggplotly(ggplot() +
ggplotly(ggplot() +
geom_jitter(data=Cnid.ph, aes(x=pH.experim, y=Perc.Fertilization, group=Taxa, col=Taxa, text=`Common name`), size=1.2, width=0.03) +
#facet_wrap(~Phylum, scales="free") + theme_minimal() +
#geom_smooth(method="lm", se=F, aes(col=Taxa), formula=y ~ poly(x, 2, raw=TRUE)) +
ggtitle("Echinodermata") +
xlab("Experimental pH") + ylab("Fertilization %") +
#scale_color_manual(values=c("#e41a1c","#ff7f00","#4daf4a")) +
theme_minimal() +
geom_line(data = predict.cnid.df, aes(x=ph, y=fit, col=species)) +
geom_ribbon(data = predict.cnid.df, aes(x=ph, ymin=lwr, ymax=upr, fill=species), linetype=2, alpha=0.1)) #+
ggplotly(ggplot() +
ggplotly(ggplot() +
geom_jitter(data=Cnid.ph, aes(x=pH.experim, y=Perc.Fertilization, group=Taxa, col=Taxa, text=`Common name`), size=1.2, width=0.03) +
ggtitle("Echinodermata") +
xlab("Experimental pH") + ylab("Fertilization %") +
#scale_color_manual(values=c("#e41a1c","#ff7f00","#4daf4a")) +
theme_minimal() +
geom_line(data = predict.cnid.df, aes(x=ph, y=fit, col=species)) +
geom_ribbon(data = predict.cnid.df, aes(x=ph, ymin=lwr, ymax=upr, fill=species), linetype=2, alpha=0.1)) #+
ggplotly(ggplot() +
geom_jitter(data=Cnid.ph, aes(x=pH.experim, y=Perc.Fertilization, group=Species, col=Species, text=`Common name`), size=1.2, width=0.03) +
ggtitle("Echinodermata") +
xlab("Experimental pH") + ylab("Fertilization %") +
#scale_color_manual(values=c("#e41a1c","#ff7f00","#4daf4a")) +
theme_minimal() +
geom_line(data = predict.cnid.df, aes(x=ph, y=fit, col=species)) +
geom_ribbon(data = predict.cnid.df, aes(x=ph, ymin=lwr, ymax=upr, fill=species), linetype=2, alpha=0.1)) #+
plot(model6) #i see no major issues with residuals
summary(model6 <- lm(fert~(ph+I(ph^2)+I(ph^3))*taxa))
fert<-subset(fert.data.3, Phylum=="Mollusca")$Perc.Fertilization
ph<-subset(fert.data.3, Phylum=="Mollusca")$pH.experim
summary(model1 <- lm(fert~ph))
plot(ph,fert,pch=21,col="brown",bg="yellow")
abline(model1,col="navy")
summary(model2 <- lm(fert~ph+I(ph^2)))
x <- c(5.5, 5.6, 5.7, 5.8, 5.9, 6, 6.1, 6.2, 6.3, 6.4, 6.5, 6.6, 6.7, 6.8, 6.9, 7, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8, 8.1, 8.2, 8.3)
y <- predict(model2,list(ph=x))
plot(ph,fert,pch=21,col="brown",bg="yellow")
lines(x,y,col="navy")
anova(model1, model2) # simple model as good as polynomial model.
hist(model1$residuals) #check residuals
plot(model1)
taxa <- as.factor(droplevels(subset(fert.data.3, Phylum=="Mollusca")$Taxa))
summary(model2 <- lm(fert~ph+taxa)) #common slope, different intercepts by taxa
anova(model1, model2) # definitely need to include sep. lines for taxa w/ diff intercepts
summary(model3 <- lm(fert~ph*taxa)) # test for diff slopes and intercepts
anova(model2, model3) # don't need diff slopes
summary(model4 <- lm(fert~ph+I(ph^2) + taxa)) #test polynomial with taxa
anova(model2, model4) # improves the model
summary(model5 <- lm(fert~ph+I(ph^2)+I(ph^3)+ taxa)) #<----------final model
anova(model4, model5) # improves the model
summary(model6 <- lm(fert~(ph+I(ph^2)+I(ph^3))*taxa))
anova(model5, model6) # improves the model
summary(model7 <- lm(fert~(ph+I(ph^2))*taxa))
anova(model6, model7) # improves the model
hist(model6$residuals) #residuals look pretty normal
plot(model6) #i see no major issues with residuals
lm.mollusc <-   lm(fert~(ph+I(ph^2)+I(ph^3))+taxa) #<----------SET FINAL MODEL HERE FOR FIGURE
ph.min.max <- fert.data.3 %>%
select(Phylum, Taxa, pH.experim) %>%
group_by(Phylum, Taxa) %>%
summarize(min=min(pH.experim, na.rm=TRUE), max=max(pH.experim, na.rm=TRUE))
taxa.list <- list()
for (i in 1:nrow(ph.min.max)) {
taxa.list[[i]] <- data.frame(ph=c(seq(from=as.numeric(ph.min.max[i,"min"]),
to=as.numeric(ph.min.max[i,"max"]),
by=0.01)),
taxa=rep(c(ph.min.max[i,"Taxa"])),
phylum=rep(c(ph.min.max[i,"Phylum"])))
}
new.data <- bind_rows(taxa.list) %>% purrr::set_names(c("ph", "taxa", "phylum"))
# new.data = data.frame(
#   ph=rep(c(seq(from=5.95, to=8.3, by=0.01)), each=5),
#   taxa=rep(levels(droplevels(subset(fert.data.3, Phylum=="Mollusca")$Taxa))))
predict.mollusc <- predict(lm.mollusc, interval = 'confidence', newdata = subset(new.data, phylum=="Mollusca")[,1:2])
predict.mollusc.df <- predict.mollusc %>%
as.data.frame() %>%
cbind(subset(new.data, phylum=="Mollusca"))
predict.mollusc.df$taxa  <- factor(droplevels(predict.mollusc.df$taxa), levels=c("abalone", "mussel", "scallop", "oyster", "clam"))
Mollusc.ph <- fert.data.3 %>%
filter(Phylum=="Mollusca") %>%
mutate(Taxa = fct_relevel(Taxa, c("abalone", "mussel", "scallop", "oyster", "clam")))
ggplotly(ggplot() +
geom_jitter(data=Mollusc.ph, aes(x=pH.experim, y=Perc.Fertilization, group=Taxa, col=Taxa, text=`Common name`), size=1.2, width=0.03) +
#facet_wrap(~Phylum, scales="free") + theme_minimal() +
#geom_smooth(method="lm", se=F, aes(col=Taxa), formula=y ~ poly(x, 2, raw=TRUE)) +
ggtitle("Mollusca") +
xlab("Experimental pH") + ylab("Fertilization %") +
scale_color_manual(values=c("#e41a1c","#ff7f00","#4daf4a",'#377eb8',"#984ea3")) +
#scale_color_discrete(name="Taxa",
#breaks=c("abalone","mussel","scallop","oyster","clam")) +
theme_minimal() +
geom_line(data = predict.mollusc.df, aes(x=ph, y=fit, col=taxa)) +
geom_ribbon(data = predict.mollusc.df, aes(x=ph, ymin=lwr, ymax=upr, fill=taxa), linetype=2, alpha=0.1))
lm.mollusc <-   lm(fert~(ph+I(ph^2)+I(ph^3))*taxa) #<----------SET FINAL MODEL HERE FOR FIGURE
ph.min.max <- fert.data.3 %>%
select(Phylum, Taxa, pH.experim) %>%
group_by(Phylum, Taxa) %>%
summarize(min=min(pH.experim, na.rm=TRUE), max=max(pH.experim, na.rm=TRUE))
taxa.list <- list()
for (i in 1:nrow(ph.min.max)) {
taxa.list[[i]] <- data.frame(ph=c(seq(from=as.numeric(ph.min.max[i,"min"]),
to=as.numeric(ph.min.max[i,"max"]),
by=0.01)),
taxa=rep(c(ph.min.max[i,"Taxa"])),
phylum=rep(c(ph.min.max[i,"Phylum"])))
}
new.data <- bind_rows(taxa.list) %>% purrr::set_names(c("ph", "taxa", "phylum"))
# new.data = data.frame(
#   ph=rep(c(seq(from=5.95, to=8.3, by=0.01)), each=5),
#   taxa=rep(levels(droplevels(subset(fert.data.3, Phylum=="Mollusca")$Taxa))))
predict.mollusc <- predict(lm.mollusc, interval = 'confidence', newdata = subset(new.data, phylum=="Mollusca")[,1:2])
predict.mollusc.df <- predict.mollusc %>%
as.data.frame() %>%
cbind(subset(new.data, phylum=="Mollusca"))
predict.mollusc.df$taxa  <- factor(droplevels(predict.mollusc.df$taxa), levels=c("abalone", "mussel", "scallop", "oyster", "clam"))
Mollusc.ph <- fert.data.3 %>%
filter(Phylum=="Mollusca") %>%
mutate(Taxa = fct_relevel(Taxa, c("abalone", "mussel", "scallop", "oyster", "clam")))
ggplotly(ggplot() +
geom_jitter(data=Mollusc.ph, aes(x=pH.experim, y=Perc.Fertilization, group=Taxa, col=Taxa, text=`Common name`), size=1.2, width=0.03) +
#facet_wrap(~Phylum, scales="free") + theme_minimal() +
#geom_smooth(method="lm", se=F, aes(col=Taxa), formula=y ~ poly(x, 2, raw=TRUE)) +
ggtitle("Mollusca") +
xlab("Experimental pH") + ylab("Fertilization %") +
scale_color_manual(values=c("#e41a1c","#ff7f00","#4daf4a",'#377eb8',"#984ea3")) +
#scale_color_discrete(name="Taxa",
#breaks=c("abalone","mussel","scallop","oyster","clam")) +
theme_minimal() +
geom_line(data = predict.mollusc.df, aes(x=ph, y=fit, col=taxa)) +
geom_ribbon(data = predict.mollusc.df, aes(x=ph, ymin=lwr, ymax=upr, fill=taxa), linetype=2, alpha=0.1))
install.packages("glmmTMB")
?glmmTMB::beta_family
?glmmTMB::glmmTMB
install.packages("metafor")
?metafor::escalc
metafor::escalc(measure='MN',mi=.6,sdi = .24,ni=5)
metafor::escalc(measure='MN',mi=1.6,sdi = .24,ni=5)
ggplotly(ggplot() +
geom_jitter(data=Mollusc.ph, aes(x=pH.experim, y=logit(Perc.Fertilization), group=Taxa, col=Taxa, text=`Common name`), size=1.2, width=0.03) +
#facet_wrap(~Phylum, scales="free") + theme_minimal() +
#geom_smooth(method="lm", se=F, aes(col=Taxa), formula=y ~ poly(x, 2, raw=TRUE)) +
ggtitle("Mollusca") +
xlab("Experimental pH") + ylab("Fertilization %") +
scale_color_manual(values=c("#e41a1c","#ff7f00","#4daf4a",'#377eb8',"#984ea3")) +
#scale_color_discrete(name="Taxa",
#breaks=c("abalone","mussel","scallop","oyster","clam")) +
theme_minimal())# +
?plogis
ggplotly(ggplot() +
geom_jitter(data=Mollusc.ph, aes(x=pH.experim, y=qlogis(Perc.Fertilization/100), group=Taxa, col=Taxa, text=`Common name`), size=1.2, width=0.03) +
#facet_wrap(~Phylum, scales="free") + theme_minimal() +
#geom_smooth(method="lm", se=F, aes(col=Taxa), formula=y ~ poly(x, 2, raw=TRUE)) +
ggtitle("Mollusca") +
xlab("Experimental pH") + ylab("Fertilization %") +
scale_color_manual(values=c("#e41a1c","#ff7f00","#4daf4a",'#377eb8',"#984ea3")) +
#scale_color_discrete(name="Taxa",
#breaks=c("abalone","mussel","scallop","oyster","clam")) +
theme_minimal())# +
fert<-subset(fert.data.3, Phylum=="Cnidaria")$Perc.Fertilization
ph<-subset(fert.data.3, Phylum=="Cnidaria")$pH.experim
sperm <- subset(fert.data.3, Phylum=="Cnidaria")$Sperm.per.mL
ph.group <- as.factor(subset(fert.data.3, Phylum=="Cnidaria")$pH.group)
genera <- as.factor(subset(fert.data.3, Phylum=="Cnidaria")$Family)
species <- as.factor(subset(fert.data.3, Phylum=="Cnidaria")$Species)
x <- c(7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8, 8.1, 8.2, 8.3)
summary(model0 <- lm(fert~ph, na.action = na.exclude)) #pH not sign. alone
summary(model1 <- lm(fert~ph.group, na.action = na.exclude)) # ph.group not sign. alone
summary(model2 <- lm(fert~sperm, na.action = na.exclude)) # sperm concentration sign. factor
summary(model3 <- lm(fert~sperm+ph, na.action = na.exclude)) # pH.group not sign. after controlling for sperm conc. intercept
summary(model4 <- lm(fert~sperm+ph.group, na.action = na.exclude)) # pH.group not sign. after controlling for sperm conc. intercept
summary(model5 <- lm(fert~sperm*ph, na.action = na.exclude)) # pH not sign. after controlling for sperm conc. intercept
summary(model6 <- lm(fert~sperm*ph.group, na.action = na.exclude)) # ph.group not sign. after controlling for sperm
summary(model3 <- lm(fert~sperm+ph, na.action = na.exclude))
summary(model7 <- lm(fert~sperm+ph+I(ph^2), na.action = na.exclude))
summary(model8 <- lm(fert~sperm+ph+I(ph^2)+I(ph^3), na.action = na.exclude))
summary(model9 <- lm(fert~ph+sperm+I(sperm^2), na.action = na.exclude)) #<--- lowest AIC
summary(model10 <- lm(fert~ph+sperm+I(sperm^2)+I(sperm^3), na.action = na.exclude))
summary(model11 <- lm(fert~ph.group+sperm+I(sperm^2), na.action = na.exclude))
AIC(model0, model1, model2, model3, model4, model5, model6, model7, model8, model9, model10, model11)
anova(model3, model9) #model 9 improves model 3 by adding a 2nd order polynomial sperm variable
hist(model9$residuals) #kinda normal
plot(model9) #somewhat concerning ... check back later
require(metafor)
require(glmmTMB)
fert.data.3$Perc.Fertilization/100
fert.data.3$Perc.Fertilization
glmmTMB(I(Perc.Fertilization/100) ~ Phylum/Taxa ,data=fert.data.3, beta_family(link = "logit"), na.action=na.exclude)
glmmTMB(Perc.Fertilization/100 ~ Phylum/Taxa, data=fert.data.3, beta_family(link = "logit"), na.action=na.exclude)
fert.data.3$Perc.Fertilization
fert.data.3$Perc.Fertilization/100
summary(fert.data.3$Perc.Fertilization/100)
glmmTMB(Perc.Fertilization/100 ~ Phylum/Taxa, data=fert.data.3, beta_family(link = "logit"), na.action=na.exclude)
glmmTMB(I(Perc.Fertilization/100) ~ Phylum/Taxa, data=fert.data.3, beta_family(link = "logit"), na.action=na.exclude)
glmmTMB(I(Perc.Fertilization/100) ~ Phylum/Taxa, data=fert.data.3, beta_family(link = "logit"), na.action=na.omit)
fert.data.3$fert <- fert.data.3$Perc.Fertilization/100
glmmTMB(fert ~ Phylum/Taxa, data=fert.data.3, beta_family(link = "logit"), na.action=na.exclude)
fert.data.3$fert
glmmTMB(fert ~ Phylum/Taxa, data=subset(fert.data.3, fert!="NA"), beta_family(link = "logit"), na.action=na.exclude)
glmmTMB(fert ~ Phylum, data=fert.data.3, beta_family(link = "logit"), na.action=na.exclude)
