summary(best7.6) #delta pH no longer sign.
TukeyHSD(best)
TukeyHSD(best)
summary(best) #sign. effect of delta pH
Anova(best7.6)
summary(best7.6) #delta pH no longer sign.
Anova(glmmTMB(ave_fert_proport ~ I(H_experimental*1000000):phylum + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2))
Anova(glmmTMB(ave_fert_proport ~ I(H_experimental*1000000)*phylum + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2))
library(betareg)
predict(best, type = "response")
predict(best, type = "response")
predict.beta(best)
betareg::predict(best)
betareg::predict(best, type="response", newdata=test.data)
best
summary(best)$coefficients
summary(best)$coefficients$cond
summary(best)$coefficients$cond[,"Estimate"]["pH_delta"]
summary(best)
# All data
car::Anova(best <- glmmTMB(ave_fert_proport ~ phylum*pH_delta  + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2))
# All data
car::Anova(best <- glmmTMB(ave_fert_proport ~ pH_delta*phylum  + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2))
# All data
car::Anova(best <- glmmTMB(ave_fert_proport ~ phylum*pH_delta  + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2))
summary(best)
librar(ggiraphExtra)
library(ggiraphExtra)
install.packages(ggiraphExtra)
install.packages("ggiraphExtra")
library(ggiraphExtra)
ggPredict(best,se=TRUE,interactive=TRUE,digits=3)
ggPredict(m5,se=TRUE,interactive=TRUE,digits=3)
ggPredict(m1,se=TRUE,interactive=TRUE,digits=3)
ggPredict(m2,se=TRUE,interactive=TRUE,digits=3)
ggPredict(m3,se=TRUE,interactive=TRUE,digits=3)
ggPredict(m6,se=TRUE,interactive=TRUE,digits=3)
summary(best)
car::Anova(best7.6 <- glmmTMB(ave_fert_proport ~ pH_delta|phylum + (1|study), data=subset(drop_na(data.fert, w), p_h_experimental>=7.6), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2))
car::Anova(best7.6 <- glmmTMB(ave_fert_proport ~ pH_delta/phylum + (1|study), data=subset(drop_na(data.fert, w), p_h_experimental>=7.6), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2))
car::Anova(best7.6 <- glmmTMB(ave_fert_proport ~ phylum/pH_delta + (1|study), data=subset(drop_na(data.fert, w), p_h_experimental>=7.6), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2))
coef(best)
coef(best)
?glmmTMB::predict()
library(glmmTMB)
?predict.glmmTMB()
newdata
new.data <- bind_rows(phylum.list) %>% purrr::set_names(c("pH_delta", "phylum"))
new.data$study <- NA
new.data$w <- NA
new.data
predict.glmmTMB(best, newdata=new.data)
glmmTMB::predict.glmmTMB(best, newdata=new.data)
??glmmTMB::predict.glmmTMB()
??predict.glmmTMB()
?predict.glmmTMB()
predict.glmmTMB(best)
glmmTMB::predict.glmmTMB(best)
require(glmmTMB)
glmmTMB::predict.glmmTMB(best)
predict.glmmTMB(best)
predict.glmmTMB()
knitr::opts_chunk$set(echo = TRUE)
#install.packages("glmmTMB", type="source")
list.of.packages <- c("gsheet", "tidyverse", "janitor", "plotly", "glmmTMB", "metafor", "broom.mixed", "car", "ggpubr", "scales") #add new libraries here
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
# Load all libraries
lapply(list.of.packages, FUN = function(X) {
do.call("require", list(X))
})
sessionInfo()
# Read in data from GoogleSheet
data.fert <- as_tibble(gsheet2tbl('https://docs.google.com/spreadsheets/d/111SuH548Et6HDckjbQjtYk-B8A5VfNkUYZgcUNRPxxY/edit?usp=sharing'))
#replace NR (not reported) with NA and convert columns to factor / numeric where needed
data.fert <- data.fert %>%
na_if("NR") %>%
clean_names()   %>% # fill in spaces with underscores for column names
mutate_at(c('phylum', 'study', 'taxonomic_group', 'common_name', 'latin_name', 'error_statistic'), as.factor) %>%
mutate_at(c('p_h_experimental', 'p_h_control', 'p_co2_experimental', 'p_co2_control', 'ave_fert_percent_p_h', 'error_percent_p_h', 'number_trials_p_h', 'incubation_time', 'sperm_per_m_l', 'sperm_egg_ratio', 'number_females', 'number_males'), as.numeric) %>%
mutate(H_experimental=10^(-1*p_h_experimental),
H_control=10^(-1*p_h_control))
#data.fert %>% select(study, ave_fert_percent_p_h, error_percent_p_h, error_statistic, number_trials_p_h) %>% View()
ggplotly(ggplot(data.fert %>% drop_na(phylum)) + geom_violin(aes(x=phylum, y=incubation_time, color=phylum)) + geom_jitter(aes(x=phylum, y=incubation_time, color=phylum, label=study)))
ggplotly(
data.fert %>%
ggplot(mapping=aes(x=p_h_experimental, y=ave_fert_percent_p_h, group=taxonomic_group, col=taxonomic_group, text=`common_name`)) +
geom_point(size=1.5, width=0.02) +
facet_wrap(~phylum, scale="free") +
geom_smooth(method="lm", se=TRUE, aes(fill=taxonomic_group)) +
ggtitle("Fertilization Rate ~ pH exposure by phylum, linear") +
theme_minimal()
)
ggplotly(
data.fert %>%
ggplot(mapping=aes(x=p_h_experimental, y=ave_fert_percent_p_h, group=study, col=study, text=`common_name`)) +
geom_point(size=1.5, width=0.02) +
facet_wrap(~phylum, scale="free") +
geom_smooth(method="lm", se=TRUE, aes(fill=taxonomic_group)) +
ggtitle("Fertilization Rate ~ pH exposure by phylum, linear") +
theme_minimal()
)
ggplotly(
data.fert %>%
ggplot(mapping=aes(x=p_h_experimental, y=ave_fert_percent_p_h, group=taxonomic_group, col=taxonomic_group, text=`common_name`)) +
geom_point(size=1, width=0.02) +
facet_wrap(~phylum, scale="free") +
geom_smooth(method="lm", se=TRUE, formula=y ~ poly(x, 2, raw=TRUE), aes(fill=taxonomic_group)) +
ggtitle("Fertilization Rate ~ pH exposure by phylum, polynomial") +
theme_minimal()
)
data.fert <- data.fert %>%
mutate(SE =  case_when(error_statistic == "SD" ~ error_percent_p_h/sqrt(number_trials_p_h),
error_statistic == "95% CI" ~ error_percent_p_h/1.96,
is.na(error_statistic) ~ error_percent_p_h,
error_statistic == "SE" ~ error_percent_p_h))
data.fert <- data.fert %>%
mutate(SD =  case_when(error_statistic == "SE" ~ error_percent_p_h*sqrt(number_trials_p_h),
error_statistic == "95% CI" ~ (error_percent_p_h/1.96)*sqrt(number_trials_p_h),
is.na(error_statistic) ~ error_percent_p_h,
error_statistic == "SD" ~ error_percent_p_h))
data.fert <- data.fert %>%
mutate(pH_delta = p_h_experimental-p_h_control)
data.fert <- data.fert %>%
mutate(ave_fert_proport = case_when(ave_fert_percent_p_h <= 100 ~ ave_fert_percent_p_h/100,
ave_fert_percent_p_h > 100 ~ 1))
data.fert$ave_fert_proport %>% hist()
ggplot(data.fert, aes(group=phylum, col=phylum)) + geom_density(aes(ave_fert_proport))
# How many studies per ~phylum?
data.fert %>%
select(phylum, study) %>%
distinct(phylum, study) %>%
group_by(phylum) %>% count()
# How many studies per taxonomic group?
data.fert %>%
select(phylum, study, taxonomic_group) %>%
distinct(phylum, study, taxonomic_group) %>%
group_by(taxonomic_group) %>% count()
weights <- metafor::escalc(measure='MN',
mi=data.fert$ave_fert_percent_p_h,
sdi = data.fert$SD,
ni=data.fert$number_trials_p_h, options(na.action="na.pass"))
data.fert$w <-weights$vi
# Before dropping studies w/o weight calcs
data.fert %>%
select(phylum, study) %>%
distinct(phylum, study) %>%
group_by(phylum) %>% count()
7+36+27
# After dropping studies (final data set for meta-analysis)
data.fert %>% drop_na(w) %>%
select(phylum, study) %>%
distinct(phylum, study) %>%
group_by(phylum) %>% count()
6+35+23
data.fert <- data.fert %>% filter(phylum!="Crustacean")
# Remove metal contamination
data.fert <- subset(data.fert, !(what_is_2nd_stressor=="Metal Contamination" & data.fert$secondary_stressor=="yes"))
data.fert <- subset(data.fert, !(what_is_2nd_stressor=="Elevated Temperature + Lead (Pb)" & data.fert$secondary_stressor=="yes"))
# Remove cocaine
data.fert <- subset(data.fert, !(what_is_2nd_stressor=="Cocaine Byproduct" & data.fert$secondary_stressor=="yes"))
as.factor(data.fert$what_is_2nd_stressor) %>% levels()
# What is the pH range?
data.fert$p_h_experimental %>% summary()
# All data
summary((drop_na(data.fert, w))$ave_fert_proport)
hist((drop_na(data.fert, w))$ave_fert_proport)
# To use beta model I can't have 0- or 1-inflated data. So, replace instances of 0% fertilization with 0.001%, and 100% with 99.999%
data.fert <- data.fert %>%
mutate_at("ave_fert_proport", function(x) {
case_when(
x == 0 ~ 0.00001,
x == 1 ~ 0.99999,
x>0 & x<1 ~ x)})
# Test all candidate predictor variables
Anova(glmmTMB(ave_fert_proport ~ pH_delta + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #YES
Anova(glmmTMB(ave_fert_proport ~ p_h_experimental + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #YES
Anova(glmmTMB(ave_fert_proport ~ p_h_control + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #no
Anova(glmmTMB(ave_fert_proport ~ phylum + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #no
Anova(glmmTMB(ave_fert_proport ~ taxonomic_group + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #no
Anova(glmmTMB(ave_fert_proport ~ incubation_time + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #no
Anova(glmmTMB(ave_fert_proport ~ log(sperm_per_m_l) + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #YES
Anova(glmmTMB(ave_fert_proport ~ log(sperm_egg_ratio) + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #no
Anova(glmmTMB(ave_fert_proport ~ number_females + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #no
Anova(glmmTMB(ave_fert_proport ~ number_males + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #no
Anova(glmmTMB(ave_fert_proport ~ pH_delta*p_h_control + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #no
Anova(glmmTMB(ave_fert_proport ~ pH_delta*phylum + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #yes interaction effect
Anova(glmmTMB(ave_fert_proport ~ pH_delta*taxonomic_group + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #no
Anova(glmmTMB(ave_fert_proport ~ pH_delta*incubation_time + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #no
Anova(glmmTMB(ave_fert_proport ~ pH_delta*log(sperm_per_m_l) + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #no interaction, but sperm conc. still sign.
Anova(glmmTMB(ave_fert_proport ~ pH_delta*log(sperm_egg_ratio) + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #no
Anova(glmmTMB(ave_fert_proport ~ pH_delta*number_females + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #no
Anova(glmmTMB(ave_fert_proport ~ pH_delta*number_males + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #no
# Identify best model using lowest AIC and R^2 value
m1 <- glmmTMB(ave_fert_proport ~ pH_delta  + (1|study),
data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)
m2 <- glmmTMB(ave_fert_proport ~ log(sperm_per_m_l)  + (1|study),
data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)
m3<- glmmTMB(ave_fert_proport ~ phylum  + (1|study),
data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)
m4<- glmmTMB(ave_fert_proport ~ pH_delta*phylum  + (1|study),
data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)
m5<- glmmTMB(ave_fert_proport ~ pH_delta:phylum  + (1|study),
data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)
m6<- glmmTMB(ave_fert_proport ~ pH_delta + phylum  + (1|study),
data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)
m6.5<- glmmTMB(ave_fert_proport ~ phylum + phylum:pH_delta  + (1|study),
data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)
m7<- glmmTMB(ave_fert_proport ~ pH_delta*log(sperm_per_m_l)  + (1|study),
data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)
m8<- glmmTMB(ave_fert_proport ~ pH_delta:log(sperm_per_m_l)  + (1|study),
data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)
m9<- glmmTMB(ave_fert_proport ~ pH_delta+log(sperm_per_m_l)  + (1|study),
data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)
m10 <- glmmTMB(ave_fert_proport ~ pH_delta*phylum*log(sperm_per_m_l) + (1|study),
data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)
m11 <- glmmTMB(ave_fert_proport ~ pH_delta*phylum*log(sperm_per_m_l) - pH_delta:phylum + (1|study),
data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)
m12 <- glmmTMB(ave_fert_proport ~ pH_delta*phylum*log(sperm_per_m_l) - pH_delta:phylum - pH_delta:log(sperm_per_m_l) + (1|study),
data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)
m13 <- glmmTMB(ave_fert_proport ~ pH_delta*phylum*log(sperm_per_m_l) - pH_delta:phylum - pH_delta:log(sperm_per_m_l) - pH_delta:phylum:log(sperm_per_m_l) +
(1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)
m14 <- glmmTMB(ave_fert_proport ~ pH_delta*phylum*log(sperm_per_m_l) - pH_delta:phylum - pH_delta:log(sperm_per_m_l) - pH_delta:phylum:log(sperm_per_m_l) -
phylum + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)
m15 <- glmmTMB(ave_fert_proport ~ pH_delta + log(sperm_per_m_l) + (1|study),
data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)
AIC(m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12, m13, m14, m15) %>% arrange(AIC) #lowest AIC = m5
BIC(m5, m4, m6, m1, m6.5) # Lowet BIC = m5
summary(m5)$AICtab["logLik"]
summary(m4)$AICtab["logLik"] # <- highest logLik (but barely)
summary(m5)$AICtab["logLik"]
summary(m1)$AICtab["logLik"]
summary(m5)$AICtab["deviance"]
summary(m4)$AICtab["deviance"] # <- lowest deviance (but barely)
summary(m5)$AICtab["deviance"]
summary(m1)$AICtab["deviance"]
anova(m5, m4) # compare the top 2 models
# Well, the phylum*pH model (m4) and the phylum:pH model (m5) are not significantly different from each other. Despite ther interaction-only model being the best fit, it doesn't make biological sense to have a common intercept (%fert and ambient pH) for all phyla. So, here I will use the phylum*pH model as the "best" one.
# All data
car::Anova(best <- glmmTMB(ave_fert_proport ~ phylum*pH_delta  + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2))
format(1.714e-06, scientific = F, digits = 3)
# Now test and save model w/ only studies run at pH 7.6 and greater
car::Anova(best7.6 <- glmmTMB(ave_fert_proport ~ phylum*pH_delta + (1|study), data=subset(drop_na(data.fert, w), p_h_experimental>=7.6), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2))
Anova(best)
summary(best) #sign. effect of delta pH
coef(best)
Anova(best7.6)
summary(best7.6) #delta pH no longer sign.
Anova(glmmTMB(ave_fert_proport ~ I(H_experimental*1000000)*phylum + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2))
predict(best)
new.data <- bind_rows(phylum.list) %>% purrr::set_names(c("pH_delta", "phylum"))
new.data$study <- NA
new.data$w <- NA
predict.test.df <- predict(best, newdata = new.data, se.fit = TRUE, type="response")
View(new.data)
predict.test.df <- predict(best, newdata = new.data, se.fit = TRUE, type="response")
knitr::opts_chunk$set(echo = TRUE)
#install.packages("glmmTMB", type="source")
list.of.packages <- c("gsheet", "tidyverse", "janitor", "plotly", "glmmTMB", "metafor", "broom.mixed", "car", "ggpubr", "scales") #add new libraries here
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
# Load all libraries
lapply(list.of.packages, FUN = function(X) {
do.call("require", list(X))
})
sessionInfo()
# Read in data from GoogleSheet
data.fert <- as_tibble(gsheet2tbl('https://docs.google.com/spreadsheets/d/111SuH548Et6HDckjbQjtYk-B8A5VfNkUYZgcUNRPxxY/edit?usp=sharing'))
#replace NR (not reported) with NA and convert columns to factor / numeric where needed
data.fert <- data.fert %>%
na_if("NR") %>%
clean_names()   %>% # fill in spaces with underscores for column names
mutate_at(c('phylum', 'study', 'taxonomic_group', 'common_name', 'latin_name', 'error_statistic'), as.factor) %>%
mutate_at(c('p_h_experimental', 'p_h_control', 'p_co2_experimental', 'p_co2_control', 'ave_fert_percent_p_h', 'error_percent_p_h', 'number_trials_p_h', 'incubation_time', 'sperm_per_m_l', 'sperm_egg_ratio', 'number_females', 'number_males'), as.numeric) %>%
mutate(H_experimental=10^(-1*p_h_experimental),
H_control=10^(-1*p_h_control))
#data.fert %>% select(study, ave_fert_percent_p_h, error_percent_p_h, error_statistic, number_trials_p_h) %>% View()
ggplotly(ggplot(data.fert %>% drop_na(phylum)) + geom_violin(aes(x=phylum, y=incubation_time, color=phylum)) + geom_jitter(aes(x=phylum, y=incubation_time, color=phylum, label=study)))
ggplotly(
data.fert %>%
ggplot(mapping=aes(x=p_h_experimental, y=ave_fert_percent_p_h, group=taxonomic_group, col=taxonomic_group, text=`common_name`)) +
geom_point(size=1.5, width=0.02) +
facet_wrap(~phylum, scale="free") +
geom_smooth(method="lm", se=TRUE, aes(fill=taxonomic_group)) +
ggtitle("Fertilization Rate ~ pH exposure by phylum, linear") +
theme_minimal()
)
ggplotly(
data.fert %>%
ggplot(mapping=aes(x=p_h_experimental, y=ave_fert_percent_p_h, group=study, col=study, text=`common_name`)) +
geom_point(size=1.5, width=0.02) +
facet_wrap(~phylum, scale="free") +
geom_smooth(method="lm", se=TRUE, aes(fill=taxonomic_group)) +
ggtitle("Fertilization Rate ~ pH exposure by phylum, linear") +
theme_minimal()
)
ggplotly(
data.fert %>%
ggplot(mapping=aes(x=p_h_experimental, y=ave_fert_percent_p_h, group=taxonomic_group, col=taxonomic_group, text=`common_name`)) +
geom_point(size=1, width=0.02) +
facet_wrap(~phylum, scale="free") +
geom_smooth(method="lm", se=TRUE, formula=y ~ poly(x, 2, raw=TRUE), aes(fill=taxonomic_group)) +
ggtitle("Fertilization Rate ~ pH exposure by phylum, polynomial") +
theme_minimal()
)
data.fert <- data.fert %>%
mutate(SE =  case_when(error_statistic == "SD" ~ error_percent_p_h/sqrt(number_trials_p_h),
error_statistic == "95% CI" ~ error_percent_p_h/1.96,
is.na(error_statistic) ~ error_percent_p_h,
error_statistic == "SE" ~ error_percent_p_h))
data.fert <- data.fert %>%
mutate(SD =  case_when(error_statistic == "SE" ~ error_percent_p_h*sqrt(number_trials_p_h),
error_statistic == "95% CI" ~ (error_percent_p_h/1.96)*sqrt(number_trials_p_h),
is.na(error_statistic) ~ error_percent_p_h,
error_statistic == "SD" ~ error_percent_p_h))
data.fert <- data.fert %>%
mutate(pH_delta = p_h_experimental-p_h_control)
data.fert <- data.fert %>%
mutate(ave_fert_proport = case_when(ave_fert_percent_p_h <= 100 ~ ave_fert_percent_p_h/100,
ave_fert_percent_p_h > 100 ~ 1))
data.fert$ave_fert_proport %>% hist()
ggplot(data.fert, aes(group=phylum, col=phylum)) + geom_density(aes(ave_fert_proport))
# How many studies per ~phylum?
data.fert %>%
select(phylum, study) %>%
distinct(phylum, study) %>%
group_by(phylum) %>% count()
# How many studies per taxonomic group?
data.fert %>%
select(phylum, study, taxonomic_group) %>%
distinct(phylum, study, taxonomic_group) %>%
group_by(taxonomic_group) %>% count()
weights <- metafor::escalc(measure='MN',
mi=data.fert$ave_fert_percent_p_h,
sdi = data.fert$SD,
ni=data.fert$number_trials_p_h, options(na.action="na.pass"))
data.fert$w <-weights$vi
# Before dropping studies w/o weight calcs
data.fert %>%
select(phylum, study) %>%
distinct(phylum, study) %>%
group_by(phylum) %>% count()
7+36+27
# After dropping studies (final data set for meta-analysis)
data.fert %>% drop_na(w) %>%
select(phylum, study) %>%
distinct(phylum, study) %>%
group_by(phylum) %>% count()
6+35+23
data.fert <- data.fert %>% filter(phylum!="Crustacean")
# Remove metal contamination
data.fert <- subset(data.fert, !(what_is_2nd_stressor=="Metal Contamination" & data.fert$secondary_stressor=="yes"))
data.fert <- subset(data.fert, !(what_is_2nd_stressor=="Elevated Temperature + Lead (Pb)" & data.fert$secondary_stressor=="yes"))
# Remove cocaine
data.fert <- subset(data.fert, !(what_is_2nd_stressor=="Cocaine Byproduct" & data.fert$secondary_stressor=="yes"))
as.factor(data.fert$what_is_2nd_stressor) %>% levels()
# What is the pH range?
data.fert$p_h_experimental %>% summary()
# All data
summary((drop_na(data.fert, w))$ave_fert_proport)
hist((drop_na(data.fert, w))$ave_fert_proport)
# To use beta model I can't have 0- or 1-inflated data. So, replace instances of 0% fertilization with 0.001%, and 100% with 99.999%
data.fert <- data.fert %>%
mutate_at("ave_fert_proport", function(x) {
case_when(
x == 0 ~ 0.00001,
x == 1 ~ 0.99999,
x>0 & x<1 ~ x)})
# Test all candidate predictor variables
Anova(glmmTMB(ave_fert_proport ~ pH_delta + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #YES
Anova(glmmTMB(ave_fert_proport ~ p_h_experimental + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #YES
Anova(glmmTMB(ave_fert_proport ~ p_h_control + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #no
Anova(glmmTMB(ave_fert_proport ~ phylum + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #no
Anova(glmmTMB(ave_fert_proport ~ taxonomic_group + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #no
Anova(glmmTMB(ave_fert_proport ~ incubation_time + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #no
Anova(glmmTMB(ave_fert_proport ~ log(sperm_per_m_l) + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #YES
Anova(glmmTMB(ave_fert_proport ~ log(sperm_egg_ratio) + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #no
Anova(glmmTMB(ave_fert_proport ~ number_females + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #no
Anova(glmmTMB(ave_fert_proport ~ number_males + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #no
Anova(glmmTMB(ave_fert_proport ~ pH_delta*p_h_control + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #no
Anova(glmmTMB(ave_fert_proport ~ pH_delta*phylum + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #yes interaction effect
Anova(glmmTMB(ave_fert_proport ~ pH_delta*taxonomic_group + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #no
Anova(glmmTMB(ave_fert_proport ~ pH_delta*incubation_time + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #no
Anova(glmmTMB(ave_fert_proport ~ pH_delta*log(sperm_per_m_l) + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #no interaction, but sperm conc. still sign.
Anova(glmmTMB(ave_fert_proport ~ pH_delta*log(sperm_egg_ratio) + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #no
Anova(glmmTMB(ave_fert_proport ~ pH_delta*number_females + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #no
Anova(glmmTMB(ave_fert_proport ~ pH_delta*number_males + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)) #no
# Identify best model using lowest AIC and R^2 value
m1 <- glmmTMB(ave_fert_proport ~ pH_delta  + (1|study),
data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)
m2 <- glmmTMB(ave_fert_proport ~ log(sperm_per_m_l)  + (1|study),
data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)
m3<- glmmTMB(ave_fert_proport ~ phylum  + (1|study),
data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)
m4<- glmmTMB(ave_fert_proport ~ pH_delta*phylum  + (1|study),
data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)
m5<- glmmTMB(ave_fert_proport ~ pH_delta:phylum  + (1|study),
data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)
m6<- glmmTMB(ave_fert_proport ~ pH_delta + phylum  + (1|study),
data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)
m6.1<- glmmTMB(ave_fert_proport ~ phylum + phylum:pH_delta  + (1|study),
data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)
m6.2<- glmmTMB(ave_fert_proport ~ pH_delta + phylum:pH_delta  + (1|study),
data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)
m7<- glmmTMB(ave_fert_proport ~ pH_delta*log(sperm_per_m_l)  + (1|study),
data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)
m8<- glmmTMB(ave_fert_proport ~ pH_delta:log(sperm_per_m_l)  + (1|study),
data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)
m9<- glmmTMB(ave_fert_proport ~ pH_delta+log(sperm_per_m_l)  + (1|study),
data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)
m10 <- glmmTMB(ave_fert_proport ~ pH_delta*phylum*log(sperm_per_m_l) + (1|study),
data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)
m11 <- glmmTMB(ave_fert_proport ~ pH_delta*phylum*log(sperm_per_m_l) - pH_delta:phylum + (1|study),
data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)
m12 <- glmmTMB(ave_fert_proport ~ pH_delta*phylum*log(sperm_per_m_l) - pH_delta:phylum - pH_delta:log(sperm_per_m_l) + (1|study),
data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)
m13 <- glmmTMB(ave_fert_proport ~ pH_delta*phylum*log(sperm_per_m_l) - pH_delta:phylum - pH_delta:log(sperm_per_m_l) - pH_delta:phylum:log(sperm_per_m_l) +
(1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)
m14 <- glmmTMB(ave_fert_proport ~ pH_delta*phylum*log(sperm_per_m_l) - pH_delta:phylum - pH_delta:log(sperm_per_m_l) - pH_delta:phylum:log(sperm_per_m_l) -
phylum + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)
m15 <- glmmTMB(ave_fert_proport ~ pH_delta + log(sperm_per_m_l) + (1|study),
data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2)
AIC(m1, m2, m3, m4, m5, m6, m6.1, m6.2, m7, m8, m9, m10, m11, m12, m13, m14, m15) %>% arrange(AIC) #lowest AIC = m5
BIC(m5, m4, m6, m1, m6.1, m6.2) # Lowet BIC = m5
BIC(m5, m4, m6, m1, m6.1, m6.2) %>% arrange(BIC) # Lowet BIC = m5
summary(m5)$AICtab["logLik"]
summary(m6.2)$AICtab["logLik"]
summary(m4)$AICtab["logLik"] # <- highest logLik (but barely)
summary(m5)$AICtab["logLik"]
summary(m1)$AICtab["logLik"]
summary(m6.2)$AICtab["deviance"]
summary(m5)$AICtab["deviance"]
summary(m4)$AICtab["deviance"] # <- lowest deviance (but barely)
summary(m5)$AICtab["deviance"]
summary(m1)$AICtab["deviance"]
# All data
car::Anova(best <- glmmTMB(ave_fert_proport ~ phylum*pH_delta  + (1|study), data=drop_na(data.fert, w), beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2))
anova(m6, m6.1) # compare the top 2 models
anova(m6, m6.2, m5) # compare the top 2 models
anova(m5, m6.2) # compare the top 2 models
anova(m4, m6.2) # compare the top 2 models
anova(m5, m6.2) # compare the top 2 models
anova(m4, m6.2) # compare the top 2 models
m6.2
# All data
car::Anova(best <- glmmTMB(ave_fert_proport ~ phylum + phylum:pH_delta  + (1|study),
data=drop_na(data.fert, w), beta_family(link="logit"),
na.action=na.exclude, weights = 1/(w+1)^2))
# Now test and save model w/ only studies run at pH 7.6 and greater
car::Anova(best7.6 <- glmmTMB(ave_fert_proport ~ phylum + phylum:pH_delta + (1|study),
data=subset(drop_na(data.fert, w), p_h_experimental>=7.6),
beta_family(link="logit"), na.action=na.exclude, weights = 1/(w+1)^2))
Anova(best)
summary(best) #sign. effect of delta pH
coef(best)
Anova(best7.6)
# All data
car::Anova(best <- glmmTMB(ave_fert_proport ~ phylum + phylum:pH_delta  + (1|study),
data=drop_na(data.fert, w), beta_family(link="logit"),
na.action=na.exclude, weights = 1/(w+1)^2))
summary(best) #sign. effect of delta pH
#format(1.714e-06, scientific = F, digits = 3)
car::Anova(best, type="III")
car::Anova(best, type="II")
effects_ok <- (requireNamespace("effects") && getRversion() >= "3.6.0")
if (effects_ok) {
(ae <- allEffects(best))
plot(ae)
}
install.packages("effects")
library(effects)
effects_ok <- (requireNamespace("effects") && getRversion() >= "3.6.0")
if (effects_ok) {
(ae <- allEffects(best))
plot(ae)
}
install.packages("effects")
library(effects)
effects_ok <- (requireNamespace("effects") && getRversion() >= "3.6.0")
if (effects_ok) {
(ae <- allEffects(best))
plot(ae)
}
install.packages("effects")
library(effects)
effects_ok <- (requireNamespace("effects") && getRversion() >= "3.6.0")
if (effects_ok) {
(ae <- allEffects(best))
plot(ae)
}
install.packages("DHARMa")
library(DHARMa)
simres <- simulateResiduals(best)
plot(simres)
if (requireNamespace("car") && getRversion() >= "3.6.0") {
Anova(best) ## default type II
}
#install.packages("effects")
#library(effects)
effects_ok <- (requireNamespace("effects") && getRversion() >= "3.6.0")
if (effects_ok) {
(ae <- allEffects(best))
plot(ae)
}
emmeans(best, poly ~ phylum | pH_delta)
install.packages("emmeans")
install.packages("emmeans")
require(emmeans)
emmeans(best, poly ~ phylum | pH_delta)
require(emmeans)
install.packages("emmeans")
require(emmeans)
